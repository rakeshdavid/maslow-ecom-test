// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rzvCoVzaF3R2GUVDhpifyK
// Component: RhOZd6c1WS2V
import * as React from "react"

import { Link, GatsbyLinkProps as LinkProps } from "gatsby"

import * as p from "@plasmicapp/react-web"

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"

import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_furn_e_commerce.module.css" // plasmic-import: rzvCoVzaF3R2GUVDhpifyK/projectcss
import * as sty from "./PlasmicRatings.module.css" // plasmic-import: RhOZd6c1WS2V/css

import StarIcon from "./icons/PlasmicIcon__Star" // plasmic-import: f2TwIhzinH1v/icon

export type PlasmicRatings__VariantMembers = {
  stars: "zero" | "one" | "two" | "three" | "four" | "five"
}

export type PlasmicRatings__VariantsArgs = {
  stars?: SingleChoiceArg<"zero" | "one" | "two" | "three" | "four" | "five">
}

type VariantPropType = keyof PlasmicRatings__VariantsArgs
export const PlasmicRatings__VariantProps = new Array<VariantPropType>("stars")

export type PlasmicRatings__ArgsType = {
  numReviews?: React.ReactNode
}

type ArgPropType = keyof PlasmicRatings__ArgsType
export const PlasmicRatings__ArgProps = new Array<ArgPropType>("numReviews")

export type PlasmicRatings__OverridesType = {
  root?: p.Flex<"div">
  freeBox?: p.Flex<"div">
}

export interface DefaultRatingsProps {
  numReviews?: React.ReactNode
  stars?: SingleChoiceArg<"zero" | "one" | "two" | "three" | "four" | "five">
  className?: string
}

function PlasmicRatings__RenderFunc(props: {
  variants: PlasmicRatings__VariantsArgs
  args: PlasmicRatings__ArgsType
  overrides: PlasmicRatings__OverridesType
  dataFetches?: PlasmicRatings__Fetches
  forNode?: string
}) {
  const { variants, args, overrides, forNode, dataFetches } = props

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root, {
        [sty.root__stars_five]: hasVariant(variants, "stars", "five"),
        [sty.root__stars_four]: hasVariant(variants, "stars", "four"),
        [sty.root__stars_one]: hasVariant(variants, "stars", "one"),
        [sty.root__stars_three]: hasVariant(variants, "stars", "three"),
        [sty.root__stars_two]: hasVariant(variants, "stars", "two"),
        [sty.root__stars_zero]: hasVariant(variants, "stars", "zero"),
      })}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        hasGap={true}
        className={classNames(defaultcss.all, sty.freeBox)}
      >
        {(hasVariant(variants, "stars", "zero") ? false : true) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__gwPgg, {
              [sty.svg__stars_five__gwPggLjGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_zero__gwPgg0YIy]: hasVariant(
                variants,
                "stars",
                "zero"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant(variants, "stars", "five")
            ? true
            : hasVariant(variants, "stars", "four")
            ? true
            : hasVariant(variants, "stars", "three")
            ? true
            : hasVariant(variants, "stars", "two")
            ? true
            : hasVariant(variants, "stars", "one")
            ? false
            : hasVariant(variants, "stars", "zero")
            ? false
            : false
        ) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__aMaO, {
              [sty.svg__stars_five__aMaOLjGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_four__aMaOAbM1R]: hasVariant(
                variants,
                "stars",
                "four"
              ),
              [sty.svg__stars_one__aMaOEmz7K]: hasVariant(
                variants,
                "stars",
                "one"
              ),
              [sty.svg__stars_three__aMaOqkWxt]: hasVariant(
                variants,
                "stars",
                "three"
              ),
              [sty.svg__stars_two__aMaOjAj2I]: hasVariant(
                variants,
                "stars",
                "two"
              ),
              [sty.svg__stars_zero__aMaO0YIy]: hasVariant(
                variants,
                "stars",
                "zero"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant(variants, "stars", "five")
            ? true
            : hasVariant(variants, "stars", "four")
            ? true
            : hasVariant(variants, "stars", "three")
            ? true
            : hasVariant(variants, "stars", "two")
            ? false
            : hasVariant(variants, "stars", "one")
            ? false
            : hasVariant(variants, "stars", "zero")
            ? false
            : false
        ) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__spGNe, {
              [sty.svg__stars_five__spGNeLjGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_four__spGNeAbM1R]: hasVariant(
                variants,
                "stars",
                "four"
              ),
              [sty.svg__stars_one__spGNeEmz7K]: hasVariant(
                variants,
                "stars",
                "one"
              ),
              [sty.svg__stars_three__spGNeqkWxt]: hasVariant(
                variants,
                "stars",
                "three"
              ),
              [sty.svg__stars_two__spGNejAj2I]: hasVariant(
                variants,
                "stars",
                "two"
              ),
              [sty.svg__stars_zero__spGNe0YIy]: hasVariant(
                variants,
                "stars",
                "zero"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant(variants, "stars", "five")
            ? true
            : hasVariant(variants, "stars", "four")
            ? true
            : hasVariant(variants, "stars", "three")
            ? false
            : hasVariant(variants, "stars", "two")
            ? false
            : hasVariant(variants, "stars", "one")
            ? false
            : hasVariant(variants, "stars", "zero")
            ? false
            : false
        ) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__qnXr, {
              [sty.svg__stars_five__qnXrljGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_four__qnXrAbM1R]: hasVariant(
                variants,
                "stars",
                "four"
              ),
              [sty.svg__stars_one__qnXremz7K]: hasVariant(
                variants,
                "stars",
                "one"
              ),
              [sty.svg__stars_three__qnXRqkWxt]: hasVariant(
                variants,
                "stars",
                "three"
              ),
              [sty.svg__stars_two__qnXRjAj2I]: hasVariant(
                variants,
                "stars",
                "two"
              ),
              [sty.svg__stars_zero__qnXr0YIy]: hasVariant(
                variants,
                "stars",
                "zero"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant(variants, "stars", "five")
            ? true
            : hasVariant(variants, "stars", "four")
            ? false
            : hasVariant(variants, "stars", "three")
            ? false
            : hasVariant(variants, "stars", "two")
            ? false
            : hasVariant(variants, "stars", "one")
            ? false
            : hasVariant(variants, "stars", "zero")
            ? false
            : false
        ) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__auaYx, {
              [sty.svg__stars_five__auaYxljGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_four__auaYxAbM1R]: hasVariant(
                variants,
                "stars",
                "four"
              ),
              [sty.svg__stars_one__auaYxemz7K]: hasVariant(
                variants,
                "stars",
                "one"
              ),
              [sty.svg__stars_three__auaYXqkWxt]: hasVariant(
                variants,
                "stars",
                "three"
              ),
              [sty.svg__stars_two__auaYXjAj2I]: hasVariant(
                variants,
                "stars",
                "two"
              ),
              [sty.svg__stars_zero__auaYx0YIy]: hasVariant(
                variants,
                "stars",
                "zero"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant(variants, "stars", "five")
            ? false
            : hasVariant(variants, "stars", "four")
            ? false
            : hasVariant(variants, "stars", "three")
            ? false
            : hasVariant(variants, "stars", "two")
            ? false
            : hasVariant(variants, "stars", "one")
            ? false
            : hasVariant(variants, "stars", "zero")
            ? true
            : false
        ) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__gvxDj, {
              [sty.svg__stars_five__gvxDjLjGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_four__gvxDjAbM1R]: hasVariant(
                variants,
                "stars",
                "four"
              ),
              [sty.svg__stars_one__gvxDjEmz7K]: hasVariant(
                variants,
                "stars",
                "one"
              ),
              [sty.svg__stars_three__gvxDjqkWxt]: hasVariant(
                variants,
                "stars",
                "three"
              ),
              [sty.svg__stars_two__gvxDjjAj2I]: hasVariant(
                variants,
                "stars",
                "two"
              ),
              [sty.svg__stars_zero__gvxDj0YIy]: hasVariant(
                variants,
                "stars",
                "zero"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant(variants, "stars", "five")
            ? false
            : hasVariant(variants, "stars", "four")
            ? false
            : hasVariant(variants, "stars", "three")
            ? false
            : hasVariant(variants, "stars", "two")
            ? false
            : true
        ) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__kV96, {
              [sty.svg__stars_five__kV96LjGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_four__kV96AbM1R]: hasVariant(
                variants,
                "stars",
                "four"
              ),
              [sty.svg__stars_three__kV96QkWxt]: hasVariant(
                variants,
                "stars",
                "three"
              ),
              [sty.svg__stars_two__kV96JAj2I]: hasVariant(
                variants,
                "stars",
                "two"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant(variants, "stars", "five")
            ? false
            : hasVariant(variants, "stars", "four")
            ? false
            : hasVariant(variants, "stars", "three")
            ? false
            : true
        ) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__p7Pca, {
              [sty.svg__stars_five__p7PcaljGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_four__p7PcaAbM1R]: hasVariant(
                variants,
                "stars",
                "four"
              ),
              [sty.svg__stars_three__p7PcAqkWxt]: hasVariant(
                variants,
                "stars",
                "three"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant(variants, "stars", "five")
            ? false
            : hasVariant(variants, "stars", "four")
            ? false
            : true
        ) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__eyLSj, {
              [sty.svg__stars_five__eyLSjLjGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
              [sty.svg__stars_four__eyLSjAbM1R]: hasVariant(
                variants,
                "stars",
                "four"
              ),
            })}
            role={"img"}
          />
        ) : null}
        {(hasVariant(variants, "stars", "five") ? false : true) ? (
          <StarIcon
            className={classNames(defaultcss.all, sty.svg__glsRg, {
              [sty.svg__stars_five__glsRgljGkm]: hasVariant(
                variants,
                "stars",
                "five"
              ),
            })}
            role={"img"}
          />
        ) : null}
      </p.Stack>

      {p.renderPlasmicSlot({
        defaultContents: "(45 Review)",
        value: args.numReviews,
        className: classNames(sty.slotTargetNumReviews),
      })}
    </p.Stack>
  ) as React.ReactElement | null
}

const PlasmicDescendants = {
  root: ["root", "freeBox"],
  freeBox: ["freeBox"],
} as const
type NodeNameType = keyof typeof PlasmicDescendants
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number]
type NodeDefaultElementType = {
  root: "div"
  freeBox: "div"
}

type ReservedPropsType = "variants" | "args" | "overrides"
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicRatings__OverridesType,
  DescendantsType<T>
>
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicRatings__VariantsArgs
    args?: PlasmicRatings__ArgsType
    overrides?: NodeOverridesType<T>
    dataFetches?: PlasmicRatings__Fetches
  } & Omit<PlasmicRatings__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicRatings__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicRatings__ArgProps,
      internalVariantPropNames: PlasmicRatings__VariantProps,
    })

    const { dataFetches } = props

    return PlasmicRatings__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicRatings"
  } else {
    func.displayName = `PlasmicRatings.${nodeName}`
  }
  return func
}

export const PlasmicRatings = Object.assign(
  // Top-level PlasmicRatings renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),

    // Metadata about props expected for PlasmicRatings
    internalVariantProps: PlasmicRatings__VariantProps,
    internalArgProps: PlasmicRatings__ArgProps,
  }
)

export default PlasmicRatings
/* prettier-ignore-end */
