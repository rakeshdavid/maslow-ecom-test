// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rzvCoVzaF3R2GUVDhpifyK
// Component: c1i3-kR6yhG
import * as React from "react"

import { Link, GatsbyLinkProps as LinkProps } from "gatsby"

import * as p from "@plasmicapp/react-web"

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Header from "../../Header" // plasmic-import: H2Memm7CAcl/component
import ProductCarousel from "../../ProductCarousel" // plasmic-import: OfAA8Q5DZXYO/component
import ProductCard from "../../ProductCard" // plasmic-import: 2LMfo35k5zXa/component
import Ratings from "../../Ratings" // plasmic-import: RhOZd6c1WS2V/component
import FeatureItem from "../../FeatureItem" // plasmic-import: muRQyL_XdUF/component
import BlogPost from "../../BlogPost" // plasmic-import: YUbDrbJ4zELA/component
import Footer from "../../Footer" // plasmic-import: 5cSBXvRUKgX/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen" // plasmic-import: irC-CDVrpB1q/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_furn_e_commerce.module.css" // plasmic-import: rzvCoVzaF3R2GUVDhpifyK/projectcss
import * as sty from "./PlasmicHome.module.css" // plasmic-import: c1i3-kR6yhG/css

import arrivals1YVUmRiCieU6I from "./images/arrivals1.png" // plasmic-import: yVUmRiCieU6i/picture
import arrivals2LtD1Pvyg8HdK from "./images/arrivals2.png" // plasmic-import: ltD1pvyg8HdK/picture
import arrivals36QiPBmmTwge from "./images/arrivals3.png" // plasmic-import: 6QI-pBmmTwge/picture
import arrivals4OTg062YiiqK from "./images/arrivals4.png" // plasmic-import: -oTg062YiiqK/picture
import arrivals5DnElUp5RjDPb from "./images/arrivals5.png" // plasmic-import: DnElUp5rjDPb/picture
import arrivals64V2ENm7YZ32 from "./images/arrivals6.png" // plasmic-import: 4v2eNM7yZ3-2/picture
import arrivals7OHhbl1Na5Udg from "./images/arrivals7.png" // plasmic-import: oHHBL1na5UDG/picture
import arrivals8HNArDcHwnq1V from "./images/arrivals8.png" // plasmic-import: hNArDcHwnq1v/picture
import f18F26TDBeeCrF from "./images/f1.jpeg" // plasmic-import: 8F26tDBeeCrF/picture
import f2HLoxlTnrpvoX from "./images/f2.jpeg" // plasmic-import: HLoxlTnrpvoX/picture
import f3V89LfYek5Jhl from "./images/f3.jpeg" // plasmic-import: V89LFYek5Jhl/picture
import f43C5YwqPrbCrx from "./images/f4.jpeg" // plasmic-import: 3C5YWQPrbCrx/picture
import b1HIB8WBllo9B from "./images/b1.jpeg" // plasmic-import: H_iB8wBLLO9b/picture
import b2IIqCa5UPjsW from "./images/b2.jpeg" // plasmic-import: iIqCa5-uPjsW/picture
import b3SUgEfKfQ4Ztb from "./images/b3.jpeg" // plasmic-import: sUgEfKfQ4ZTB/picture
import adidasJLWHaDEr6J from "./images/adidas.png" // plasmic-import: j-lWHaDEr6-j/picture
import hmFwQyEnaRs9Yj from "./images/hm.png" // plasmic-import: FwQYEnaRS9YJ/picture
import kappa1NDsylcuJmjB from "./images/kappa.png" // plasmic-import: 1NDsylcuJmjB/picture
import lacosteOgoKxw0O3GkP from "./images/lacoste.png" // plasmic-import: OGOKxw0O3gkP/picture
import levisHuUzXnxjrd5 from "./images/levis.png" // plasmic-import: HuUZ-Xnxjrd5/picture

export type PlasmicHome__VariantMembers = {}

export type PlasmicHome__VariantsArgs = {}
type VariantPropType = keyof PlasmicHome__VariantsArgs
export const PlasmicHome__VariantProps = new Array<VariantPropType>()

export type PlasmicHome__ArgsType = {}
type ArgPropType = keyof PlasmicHome__ArgsType
export const PlasmicHome__ArgProps = new Array<ArgPropType>()

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">
  header?: p.Flex<typeof Header>
  productCarousel?: p.Flex<typeof ProductCarousel>
  featureItem?: p.Flex<typeof FeatureItem>
  footer?: p.Flex<typeof Footer>
}

export interface DefaultHomeProps {
  className?: string
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs
  args: PlasmicHome__ArgsType
  overrides: PlasmicHome__OverridesType
  dataFetches?: PlasmicHome__Fetches
  forNode?: string
}) {
  const { variants, args, overrides, forNode, dataFetches } = props

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants(),
  })

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(defaultcss.all, sty.freeBox__zSioG)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__ohHfl)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__h1Id4)}>
                <Header
                  data-plasmic-name={"header"}
                  data-plasmic-override={overrides.header}
                />

                <ProductCarousel
                  data-plasmic-name={"productCarousel"}
                  data-plasmic-override={overrides.productCarousel}
                  className={classNames("__wab_instance", sty.productCarousel)}
                />
              </div>
            </p.Stack>

            <div className={classNames(defaultcss.all, sty.freeBox___4Ijef)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__tjDmV
                )}
              >
                {"New Arrivals"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__dr78I)}
            >
              <ProductCard
                className={classNames(
                  "__wab_instance",
                  sty.productCard___5J8M5
                )}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__wk7Fw)}
                    src={arrivals1YVUmRiCieU6I}
                  />
                }
                onSale={"onSale" as const}
                price={"$65.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__xuLq)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Wooden Chair"}
              />

              <ProductCard
                className={classNames(
                  "__wab_instance",
                  sty.productCard___9UzCg
                )}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__msGXr)}
                    src={arrivals2LtD1Pvyg8HdK}
                  />
                }
                onSale={"onSale" as const}
                price={"$80.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__rIrEm)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Single Armchair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__sbyXz)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__fwOsz)}
                    src={arrivals36QiPBmmTwge}
                  />
                }
                price={"$40.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__fGlxA)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Wooden Armchair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__ymFz)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__s4ZFu)}
                    src={arrivals4OTg062YiiqK}
                  />
                }
                onSale={"onSale" as const}
                price={"$100.00"}
                ratings={
                  <Ratings
                    className={classNames(
                      "__wab_instance",
                      sty.ratings___3Scq6
                    )}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Stylish Chair"}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__jQL)}
            >
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__aagx7)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___5EbhM)}
                    src={arrivals5DnElUp5RjDPb}
                  />
                }
                price={"$120.00"}
                title={"Modern Chair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__lmsvq)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__msbFt)}
                    src={arrivals64V2ENm7YZ32}
                  />
                }
                onSale={"onSale" as const}
                price={"$140.00"}
                title={"Mapple Wood Dinning Table"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__d85Bu)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__kx3H)}
                    src={arrivals7OHhbl1Na5Udg}
                  />
                }
                onSale={"onSale" as const}
                price={"$90.00"}
                title={"Arm Chair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__vN3Zn)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__aOz8S)}
                    src={arrivals8HNArDcHwnq1V}
                  />
                }
                price={"$140.00"}
                title={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__vqNbC
                    )}
                  >
                    {"Wooden Bed"}
                  </div>
                }
              />
            </p.Stack>

            <FeatureItem
              data-plasmic-name={"featureItem"}
              data-plasmic-override={overrides.featureItem}
              className={classNames("__wab_instance", sty.featureItem)}
            />

            <div className={classNames(defaultcss.all, sty.freeBox__dzqlP)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__uHJy8
                )}
              >
                {"Featured Products"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__vbzk)}
            >
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__ygHaC)}
                price={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__o1WzE
                    )}
                  >
                    {"$160.00"}
                  </div>
                }
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__fRz2P)}
                    numReviews={"(12 Review)"}
                    stars={"two" as const}
                  />
                }
                title={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.text__aHaHq
                    )}
                  >
                    {"Designed Sofa"}
                  </div>
                }
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__sdf7V)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__icJ5W)}
                    src={f2HLoxlTnrpvoX}
                  />
                }
                price={"$200.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__fPd4N)}
                    stars={"four" as const}
                  />
                }
                title={"Dining Table"}
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__pzPcO)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__raWnC)}
                    src={f3V89LfYek5Jhl}
                  />
                }
                price={"$100.00"}
                ratings={
                  <Ratings
                    className={classNames(
                      "__wab_instance",
                      sty.ratings___5IJ9U
                    )}
                    numReviews={"(23 Review)"}
                    stars={"five" as const}
                  />
                }
                title={"Chair and Table"}
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__ctUi5)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__kSOL)}
                    src={f43C5YwqPrbCrx}
                  />
                }
                price={"$299.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings___103L)}
                    numReviews={"(35 Review)"}
                  />
                }
                title={"Modern Arm Chair"}
                withReviews={"withReviews" as const}
              />
            </p.Stack>

            <div className={classNames(defaultcss.all, sty.freeBox__a2Nr3)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.text__w3EXt
                )}
              >
                {"Latest Blog"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__bsDwh)}
            >
              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__wKmJh)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___2Z81Z)}
                    src={b1HIB8WBllo9B}
                  />
                }
              />

              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__jehKb)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___2ArLw)}
                    src={b2IIqCa5UPjsW}
                  />
                }
              />

              <BlogPost
                className={classNames("__wab_instance", sty.blogPost___8Vw9X)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__rrWew)}
                    src={b3SUgEfKfQ4Ztb}
                  />
                }
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__cSgXo)}
            >
              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__pyXS)}
                src={adidasJLWHaDEr6J}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__rg3O7)}
                src={hmFwQyEnaRs9Yj}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__w5Fam)}
                src={kappa1NDsylcuJmjB}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__y2LGo)}
                src={lacosteOgoKxw0O3GkP}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__zPGh)}
                src={levisHuUzXnxjrd5}
              />
            </p.Stack>

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null
}

const PlasmicDescendants = {
  root: ["root", "header", "productCarousel", "featureItem", "footer"],
  header: ["header"],
  productCarousel: ["productCarousel"],
  featureItem: ["featureItem"],
  footer: ["footer"],
} as const
type NodeNameType = keyof typeof PlasmicDescendants
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number]
type NodeDefaultElementType = {
  root: "div"
  header: typeof Header
  productCarousel: typeof ProductCarousel
  featureItem: typeof FeatureItem
  footer: typeof Footer
}

type ReservedPropsType = "variants" | "args" | "overrides"
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHome__VariantsArgs
    args?: PlasmicHome__ArgsType
    overrides?: NodeOverridesType<T>
    dataFetches?: PlasmicHome__Fetches
  } & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key }
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps,
    })

    const { dataFetches } = props

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicHome"
  } else {
    func.displayName = `PlasmicHome.${nodeName}`
  }
  return func
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    productCarousel: makeNodeComponent("productCarousel"),
    featureItem: makeNodeComponent("featureItem"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,
  }
)

export default PlasmicHome
/* prettier-ignore-end */
